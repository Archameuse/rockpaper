import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import ModalRules from '../components/ModalRules'
import useLocalStorage from '../hooks/useLocalStorage'
import { useMediaQuery } from '../hooks/useMediaQuery'

export default function Home() {
  const [showRules, setShowRules] = useState(false)
  const [picked, setPicked] = useState(0)
  const [house, setHouse] = useState(0)
  const [result, setResult] = useState(false)
  const [score, setScore] = useLocalStorage("RPSscore", [0])
  const isPhone = useMediaQuery('(max-width: 825px)')

  async function handlePick(int){
    setPicked(int)
    await new Promise(r => setTimeout(r, 1000));
    let random = (Math.floor(Math.random() * 5) + 1)
    setHouse(random)
    setResult(getResult(int, random))
  }

  function getResult(picked, house){
    let dif = picked-house
    if (picked === house) return 'draw'
    if (dif === -1 || 
        dif ===  4 ||
        dif === -3 || 
        dif ===  2) {
      setScore(parseInt(score) + 1)
      return 'win'     
    } else {
      setScore(parseInt(score) - 1)
      return 'lose'
    }
  }

  function resolveChip(id){
    if (id === 1) return ('scissors')
    if (id === 2) return ('paper')
    if (id === 3) return ('rock')
    if (id === 4) return ('lizard')
    if (id === 5) return ('spock')
    else return ''
  }

  function resolveWin(type){
    if (type === 'player') {
      return result
    } else if (type === 'house') {
      if (result === 'lose') return 'win'
      else return ''
    }
    else return ''
  }

  function handleAgain(){
    setPicked(0)
    setHouse(0)
    setResult(false)
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <header>
          <div className="title">
            <Image src="/logo-bonus.svg" width={115} height={110}/>
          </div>
          <div className="score">
            <p>score</p>
            <h2>{score}</h2>
          </div>
        </header>
        <section>
          {picked ? 
          isPhone ? (
            <div className="picked pickedPhone">
            <div className="chips">
              <div className="you">
                <h3>You picked</h3>
                  <div className={`chip ${resolveChip(picked)} ${resolveWin('player')}`}>
                    <img src={`/icon-${resolveChip(picked)}.svg`}/>
                  </div>
              </div>
              <div className="house">
                <h3>House picked</h3>
                { house ? (
                  <div className={`chip ${resolveChip(house)} ${resolveWin('house')}`}>
                    <img src={`/icon-${resolveChip(house)}.svg`}/>
                  </div>
                ) : (<div className="chipholder"/>)}
              </div>
            </div>
            {result && (<div className="result">
              {(result !== 'draw') ? (<h2>You {result}</h2>) : (<h2>{result}</h2>)}
              <div className="again" onClick={() => handleAgain()}>Play Again</div>
            </div>)}
          </div>) :
          (<div className="picked">
            <div className="you">
              <h3>You picked</h3>
              <div className="chipwrap">
                <div className={`chip ${resolveChip(picked)} ${resolveWin('player')}`}>
                  <img src={`/icon-${resolveChip(picked)}.svg`}/>
                </div>
              </div>
            </div>
            {result && (<div className="result">
              {(result !== 'draw') ? (<h2>You {result}</h2>) : (<h2>{result}</h2>)}
              <div className="again" onClick={() => handleAgain()}>Play Again</div>
            </div>)}
            <div className="house">
              <h3>House picked</h3>
              { house ? (<div className="chipwrap">
                <div className={`chip ${resolveChip(house)} ${resolveWin('house')}`}>
                  <img src={`/icon-${resolveChip(house)}.svg`}/>
                </div>
              </div>) : (<div className="chipholder"/>)}
            </div>
          </div>) :

          (<div className="pentagon">
            <div className="chip scissors" onClick={() => handlePick(1)}>
              <img src="/icon-scissors.svg"/>
            </div>
            <div className="chip paper" onClick={() => handlePick(2)}>
              <img src="/icon-paper.svg"/>
            </div>
            <div className="chip rock" onClick={() => handlePick(3)}>
              <img src="/icon-rock.svg"/>
            </div>
            <div className="chip lizard" onClick={() => handlePick(4)}>
              <img src="/icon-lizard.svg"/>
            </div>
            <div className="chip spock" onClick={() => handlePick(5)}>
              <img src="/icon-spock.svg"/>
            </div>
          </div>)}
        </section>
        <footer>
          <div className="rules" onClick={() => setShowRules(true)}>
            <h4>Rules</h4>
          </div>
        </footer>
      </main>
      {showRules && (<ModalRules onclose={() => setShowRules(false)} />)}
    </div>
  )
}
